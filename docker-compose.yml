version: '3.4'

services:
  # SQL Server
  sqlserver:
    container_name: "sql-server"
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: ${SA_PASSWORD}
    ports:
      - "1433:1433"
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P ${SA_PASSWORD} -Q 'SELECT 1'"]
      interval: 20s
      retries: 3
      start_period: 50s
    volumes:
      - ./init/sqlserver:/docker-entrypoint-initdb.d
      - ./init/sqlserver/entrypoint.sh:/entrypoint.sh
    entrypoint: ["/bin/bash", "/entrypoint.sh"] 
    networks:
      - default
  
  # GATEWAY
  librewms.gateway:
    image: ${DOCKER_REGISTRY-}librewmsgateway
    build:
      context: .
      dockerfile: src/LibreWms.Gateway/Dockerfile
    depends_on:
      sqlserver:
         condition: service_healthy
    ports:
      - "5000:8080"
    networks:
      - default

  # Message Broker
  rabbitmq:
    container_name: "rabbitmq"
    image: rabbitmq:3-management
    ports:
    - "15672:15672"
    - "5672:5672"
    environment:
        - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
        - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    volumes:
        - rabbitmq_data:/var/lib/rabbitmq
    networks:
    - default

  # Migration service for EF migrations
  ef-migrations:
    image: mcr.microsoft.com/dotnet/sdk:8.0
    container_name: "ef-migrations" 
    environment:
      - ConnectionStrings__DefaultConnection=${PRODUCT_DB_CONNECTION_STRING}
    depends_on:
      sqlserver:
        condition: service_healthy
    volumes:
    - ./src:/app
    - ./init/ef-migrations/run-migrations.sh:/run-migrations.sh
    working_dir: /app/Products/StileStream.Wms.Products.Persistance
    entrypoint: ["/bin/bash", "/run-migrations.sh"]
    healthcheck:
      test: ["CMD", "test", "-f", "/tmp/migrations_done"]
      interval: 10s
      retries: 5
      start_period: 50s
    networks:
    - default

  # FUNCTION APP
  librewms.functionapp:
    image: ${DOCKER_REGISTRY-}librewmsfunctionapp
    build:
      context: .
      dockerfile: src/Functions/LibreWms.FunctionApp/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__SqlServer=${PRODUCT_DB_CONNECTION_STRING}
      - ConnectionStrings__RabbitMq=${RABBITMQ_CONNECTION_STRING}
    depends_on:
      sqlserver:
         condition: service_healthy
  

volumes:
  sqlvolume:
  rabbitmq_data:
networks:
  default:
    driver: bridge

